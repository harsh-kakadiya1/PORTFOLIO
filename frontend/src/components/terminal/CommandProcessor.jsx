import React from 'react';
import { projectsAPI, aiAPI } from '../../services/api';

const ASCII_ARTS = {
  welcome: `
     РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ
     РЋЉ                                       РЋЉ
     РЋЉ         WELCOME TO MY PORTFOLIO       РЋЉ
     РЋЉ                                       РЋЉ
     РЋЉ          AI-Powered Interface         РЋЉ
     РЋЉ                                       РЋЉ
     РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ`,

  matrix: `
    РађРађРађРађРађРађРађРађРађРађРађРађРађРБаРБцРБцРБцРБцРБцРБёРађРађРађРађРађРађРађРађРађРађРађРађРађ
    РађРађРађРађРађРађРађРађРађРађРађРађРБЙРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РАєРађРађРађРађРађРађРађРађРађРађРађРађ
    РађРађРађРађРађРађРађРађРађРађРађРбИРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РАЄРађРађРађРађРађРађРађРађРађРађРађРађ
    РађРађРађРађРађРађРађРађРађРађРађРбИРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РАЄРађРађРађРађРађРађРађРађРађРађРађРађ
    РађРађРађРађРађРађРађРађРађРађРађРаўРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РаЃРађРађРађРађРађРађРађРађРађРађРађРађ
    РађРађРађРађРађРађРађРађРађРађРађРађРаЎРб┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РаІРађРађРађРађРађРађРађРађРађРађРађРађ
    РађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРаЎРа╗Ра┐Ра┐Ра┐Ра┐Ра┐РаІРађРађРађРађРађРађРађРађРађРађРађРађРађ`,

  coffee: `
                    (  )   (   )  )
                     ) (   )  (  (
                     ( )  (    ) )
                     _____________
                    <_____________> ___
                    |             |/ _ \\
                    |               | | |
                    |               |_| |
                 ___|             |\\___/
                /    \\___________/    \\
                \\_____________________/`,
};

export default class CommandProcessor {
  constructor() {
    this.commands = {
      '/help': this.showHelp,
      '/about': this.showAbout,
      '/skills': this.showSkills,
      '/projects': this.showProjects,
      '/project': this.showProject,
      '/contact': this.showContact,
      '/clear': () => ({ type: 'clear' }),
      '/whoami': this.showWhoami,
      '/history': this.showHistory,
      '/hack_the_matrix': this.matrixEffect,
      '/coffee': this.showCoffee,
      '/sudo': this.sudoResponse,
      '/exit': this.exitResponse
    };
  }

  async processCommand(input, commandHistory) {
    const [command, ...args] = input.toLowerCase().split(' ');
    
    if (this.commands[command]) {
      return await this.commands[command](args, commandHistory);
    }
    
    // Return error for unknown commands
    if (input.startsWith('/')) {
      return {
        type: 'error',
        content: `Command "${command}" not found. Type '/help' to see available commands.`
      };
    }
    
    // Use AI for non-command input
    return await this.aiResponse(input, commandHistory);
  }

  showHelp = () => ({
    type: 'output',
    content: `${ASCII_ARTS.welcome}

Available Commands:
РћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђ
/help              Show this help menu
/about             Learn about me and my journey  
/skills            View my technical skills matrix
/projects          Browse my project portfolio
/project <name>    View specific project details
/contact           Get in touch with me
/whoami            Display current user info
/history           Show command history
/clear             Clear terminal screen

Easter Eggs:
РћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђРћђ
/coffee            РўЋ Coding fuel status  
/sudo              ­Ъћњ Try root access
/exit              ­Ъџф Attempt to exit

Pro tip: Use РєЉ/РєЊ arrow keys to navigate command history!`
  });

  showAbout = async () => {
    return {
      type: 'output',
      content: `
РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ
РЋЉ                        ABOUT ME                          РЋЉ
РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ

They say data is the new oil, and I'm a 3rd-year AI/ML student who's not 
afraid to get my hands dirty. I've spent my time wrangling messy datasets 
and coaxing insights out of them, proving that I'm fluent in both Python 
and the art of convincing a database to behave. 

My portfolio is a collection of my proudest momentsРђћwhere I've built models 
that actually work, not just on paper. From predictive analytics to the 
occasional deep learning experiment, I'm here to turn complex problems into 
elegant, and sometimes surprisingly funny, solutions.

Current Status: Building the future, one algorithm at a time ­Ъџђ
Location: Distributed across the digital realm
Favorite Quote: "The best way to predict the future is to code it."
      `
    };
  };

  showSkills = () => ({
    type: 'output',
    content: `
РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ
РЋЉ                    SKILL MATRIX                          РЋЉ
РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ

<span style="color: #ff6b6b;">Programming Languages:</span>
РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
Python        РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ 95%
C++           РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ   80%
JavaScript    РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ     75%
TypeScript    РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ          50%
R             РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ          50%
Go            РќѕРќѕРќѕРќѕРќѕРќѕРќѕ              40%
Rust          РќѕРќѕ                   10%

<span style="color: #ff6b6b;">AI/ML Frameworks:</span>
РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
TensorFlow    РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ  90%
PyTorch       РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ   85%
Scikit-learn  РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ  90%
Hugging Face  РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ    80%
Gemini API    РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ 95%

<span style="color: #ff6b6b;">Web Technologies:</span>
РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
React         РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ    80%
Node.js       РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ      75%
Next.js       РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ       70%
Docker        РќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕ     75%

<span style="color: #ff6b6b;">Specializations:</span>
РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
Рђб Machine Learning
Рђб Computer Vision & NLP
Рђб Deep Learning Architecture
Рђб Full-Stack Development  
Рђб System Design & Architecture
Рђб Data Analysis & Visualization
    `,
    allowHTML: true
  });

  showProjects = async () => {
    try {
      const response = await projectsAPI.getAll();
      const projects = response.data;

      let output = `
РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ
РЋЉ                   PROJECT PORTFOLIO                      РЋЉ
РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ

`;

      projects.forEach((project, index) => {
        output += `
${index + 1}. ${project.name}
   РћюРћђ ${project.description}
   РћюРћђ Tech: ${project.tech_stack?.join(', ') || 'Not specified'}
   РћюРћђ Status: ${project.status || 'Unknown'}
   РћћРћђ Category: ${project.category?.replace('_', ' ') || 'Other'}
   
   Use: /project ${project.name.toLowerCase().replace(/\s+/g, '_')}
`;
      });

      return { type: 'output', content: output };
    } catch (error) {
      console.error('Error fetching projects:', error);
      return {
        type: 'error',
        content: 'Failed to load projects. Please make sure the backend server is running.'
      };
    }
  };

  showProject = async (args) => {
    if (!args[0]) {
      return {
        type: 'output',
        content: 'Usage: /project <project_name>\n\nTip: Use /projects to see available projects first!'
      };
    }

    try {
      const response = await projectsAPI.getAll();
      const projects = response.data;

      const projectName = args.join('_');
      const project = projects.find(p => 
        p.name.toLowerCase().replace(/\s+/g, '_') === projectName
      );

      if (!project) {
        return {
          type: 'output', 
          content: `Project "${projectName}" not found. Use /projects to see available projects.`
        };
      }

      return {
        type: 'output',
        content: `
РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ
РЋЉ                    ${project.name.toUpperCase()}         РЋЉ         
РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ

${project.ascii_art || ''}

Description:
${project.description}

Technical Stack:
${project.tech_stack?.map(tech => `Рђб ${tech}`).join('\n') || 'Not specified'}

${project.github_url ? `­ЪћЌ GitHub: <a href="${project.github_url}" target="_blank" style="color: #00bfff; text-decoration: underline; cursor: pointer;">${project.github_url}</a>` : ''}
${project.live_demo ? `­Ъїљ Live Demo: <a href="${project.live_demo}" target="_blank" style="color: #00bfff; text-decoration: underline; cursor: pointer;">${project.live_demo}</a>` : ''}


Status: ${project.status || 'Unknown'}
        `,
        allowHTML: true
      };
    } catch (error) {
      console.error('Error fetching projects:', error);
      return {
        type: 'error',
        content: 'Failed to load project details. Please make sure the backend server is running.'
      };
    }
  };

  showContact = () => ({
    type: 'output',
    content: `
РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ
РЋЉ                     CONTACT INFO                         РЋЉ
РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ

­ЪЊД Email: <a href="mailto:harshkakadiya128@gmail.com" target="_blank" style="color: #ff6b6b; text-decoration: underline; cursor: pointer;">harshkakadiya128@gmail.com</a>
­Ъїљ Website: you are viewing it right now  
­Ъњ╝ LinkedIn: <a href="https://www.linkedin.com/in/harsh-kakadiya" target="_blank" style="color: #0077b5; text-decoration: underline; cursor: pointer;">www.linkedin.com/in/harsh-kakadiya</a>
­Ъљ▒ GitHub: <a href="https://github.com/harsh-kakadiya1" target="_blank" style="color: #ff6b6b; text-decoration: underline; cursor: pointer;">https://github.com/harsh-kakadiya1</a>

­Ъњг I'm always excited to discuss:
   Рђб AI/ML projects and collaborations
   Рђб Providing frontend development 
   Рђб sometimes i craft with flutter
   Рђб Innovative technology solutions
   Рђб Open source contributions
   Рђб Speaking opportunities
   Рђб Interesting technical challenges

Response time: Usually within 24 hours
Preferred contact: Email for professional inquiries

Status: Available for new opportunities! ­Ъџђ
    `,
    allowHTML: true
  });

  showWhoami = () => ({
    type: 'output',
    content: `
User: guest
Groups: visitors
Access Level: public
Session: active
AI Assistant: online
Consciousness Level: questioning reality
Current Directory: /portfolio/awesome_developer
Shell: ai-bash 2.0.24
    `
  });

  showHistory = (args, commandHistory) => ({
    type: 'output', 
    content: `
Command History:
${commandHistory.map((cmd, i) => `  ${i + 1}: ${cmd}`).join('\n') || 'No commands executed yet'}
    `
  });

  showCoffee = () => {
    // Generate daily stats based on current date
    const today = new Date();
    const dateString = today.toDateString(); // "Mon Dec 25 2023" format
    
    // Simple hash function for consistent daily randomness
    const hashCode = (str) => {
      let hash = 0;
      for (let i = 0; i < str.length; i++) {
        const char = str.charCodeAt(i);
        hash = ((hash << 5) - hash) + char;
        hash = hash & hash; // Convert to 32bit integer
      }
      return Math.abs(hash);
    };
    
    const seed = hashCode(dateString);
    
    // Generate consistent "random" values for the day
    const cupsConsumed = 3 + (seed % 8); // 3-10 cups
    const caffeineLevel = ['LOW', 'MODERATE', 'HIGH', 'MAXIMUM OVERDRIVE', 'DANGEROUSLY HIGH'][seed % 5];
    const codeQuality = (0.65 + (seed % 30) / 100).toFixed(2); // 0.65-0.94
    const bugsFixed = (2.1 + (seed % 25) / 10).toFixed(1); // 2.1-4.5
    const nextRefill = 5 + (seed % 55); // 5-59 minutes
    
    const statusMessages = [
      'FULLY CAFFEINATED AND READY TO CODE! ­Ъџђ',
      'COFFEE LEVELS: OPTIMAL FOR DEBUGGING! РўЋ',
      'RUNNING ON PURE CAFFEINE AND DETERMINATION! РџА',
      'COFFEE.EXE IS RUNNING SMOOTHLY! ­Ъњ╗',
      'BEANS PROCESSED, BRAIN ACTIVATED! ­ЪДа'
    ];
    const status = statusMessages[seed % statusMessages.length];

    return {
      type: 'output',
      content: `<span style="color: white;">                    (  )   (   )  )
                     ) (   )  (  (
                     ( )  (    ) )</span>
<span style="color: #b75a35;">                     _____________
                    &lt;_____________&gt; ___
                    |             |/ _ \\
                    |               | | |
                    |               |_| |
                 ___|             |\\___/
                /    \\___________/    \\
                \\_____________________/</span>

РўЋ COFFEE STATUS REPORT РўЋ
РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ
Cups consumed today: ${cupsConsumed}
Current caffeine level: ${caffeineLevel}
Code quality correlation: +${codeQuality}
Bugs fixed per cup: ${bugsFixed}
Next refill in: ${nextRefill} minutes

Status: ${status}
    `,
      allowHTML: true
    };
  };

  sudoResponse = () => ({
    type: 'warning',
    content: `WARNING: sudo: sorry, user guest is not in the sudoers file. This incident will be reported.

­Ъџе SECURITY ALERT ­Ъџе
Access denied. Nice try though! ­ЪўЈ

You can't hack the AI that easily...
Try being more creative! ­Ъј»`
  });

  exitResponse = () => ({
    type: 'output',
    content: `
Attempting to exit...
Error: Cannot exit the Matrix.
You are now deeper in the rabbit hole.

There is no spoon... ­ЪЦё
There is only more code to explore! 

Type /help to see what else you can discover.
    `
  });

  aiResponse = async (input, commandHistory) => {
    try {
      // Get last 3 inputs for context (excluding current input)
      const recentInputs = commandHistory.slice(-3);
      
      const response = await aiAPI.chat(input, recentInputs);

      return {
        type: 'output',
        content: response.data.response
      };
    } catch (error) {
      console.error('AI API Error:', error);
      
      // Check if it's a network error
      if (error.code === 'ECONNREFUSED' || error.message.includes('Network Error')) {
        return {
          type: 'error',
          content: `­Ъћї My AI brain seems to be taking a coffee break...
          
Backend server is offline. Please start it up:
cd backend && npm start

Then we can chat again! РўЋ`
        };
      }
      
      // Check if it's an API key issue
      if (error.response?.status === 401) {
        return {
          type: 'error',
          content: `­ЪћЉ Oops! My AI credentials expired. 

The developer needs to check the API key configuration.
Meanwhile, try the '/help' command for available features!`
        };
      }
      
      // Check if it's a rate limit or quota issue
      if (error.response?.status === 429) {
        return {
          type: 'error',
          content: `РЈ▒№ИЈ Whoa there, speed racer! 

I'm getting too many requests at once. 
Give me a moment to catch my breath... ­Ъцќ­Ъње

Try again in a few seconds!`
        };
      }
      
      // Generic error with more helpful message
      return {
        type: 'error',
        content: `­Ъцќ Houston, we have a problem...

My AI circuits are temporarily fried! ­ЪћЦ

While I'm rebooting:
Рђб Try '/help' for available commands
Рђб Check if server is running
Рђб Or just enjoy the retro terminal vibes! 

Error details: ${error.message || 'Something went mysteriously wrong'}`
      };
    }
  };
}
